!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;"undefined"!=typeof window?n=window:"undefined"!=typeof global?n=global:"undefined"!=typeof self&&(n=self),n.omnivore=e()}}(function(){return function i(u,a,s){function f(r,e){if(!a[r]){if(!u[r]){var n="function"==typeof require&&require;if(!e&&n)return n(r,!0);if(c)return c(r,!0);var t=new Error("Cannot find module '"+r+"'");throw t.code="MODULE_NOT_FOUND",t}var o=a[r]={exports:{}};u[r][0].call(o.exports,function(e){var n=u[r][1][e];return f(n||e)},o,o.exports,i,u,a,s)}return a[r].exports}for(var c="function"==typeof require&&require,e=0;e<s.length;e++)f(s[e]);return f}({1:[function(e,n){function u(e,n){"addData"in e&&e.addData(n),"setGeoJSON"in e&&e.setGeoJSON(n)}function o(e,n,r){var t="string"==typeof e?JSON.parse(e):e;for(var o in r=r||L.geoJson(),t.objects){var i=h.feature(t,t.objects[o]);i.features?u(r,i.features):u(r,i)}return r}function a(e,n,r){return r=r||L.geoJson(),n=n||{},t.csv2geojson(e,n,function(e,n){return e?r.fire("error",{error:e}):void u(r,n)}),r}function i(e,n,r){var t=l(e);return t?(u(r=r||L.geoJson(),v.gpx(t)),r):r.fire("error",{error:"Could not parse GPX"})}function s(e,n,r){var t=l(e);return t?(u(r=r||L.geoJson(),v.kml(t)),r):r.fire("error",{error:"Could not parse KML"})}function f(e,n,r){r=r||L.geoJson(),n=n||{};for(var t=g.decode(e,n.precision),o={type:"LineString",coordinates:[]},i=0;i<t.length;i++)o.coordinates[i]=[t[i][1],t[i][0]];return u(r,o),r}function c(e,n,r){return u(r=r||L.geoJson(),d(e)),r}function l(e){return"string"==typeof e?(new DOMParser).parseFromString(e,"text/xml"):e}var p=e("corslite"),t=e("csv2geojson"),d=e("wellknown"),g=e("polyline"),h=e("topojson/topojson.js"),v=e("togeojson");n.exports.polyline=function(e,r,n){var t=n||L.geoJson();return p(e,function(e,n){return e?t.fire("error",{error:e}):(f(n.responseText,r,t),void t.fire("ready"))}),t},n.exports.polyline.parse=f,n.exports.geojson=function(e,n,r){var t=r||L.geoJson();return p(e,function(e,n){return e?t.fire("error",{error:e}):(u(t,JSON.parse(n.responseText)),void t.fire("ready"))}),t},n.exports.topojson=function(e,n,r){var t=r||L.geoJson();return p(e,function(e,n){return e?t.fire("error",{error:e}):(o(n.responseText,0,t),void t.fire("ready"))}),t},n.exports.topojson.parse=o,n.exports.csv=function(e,o,n){var i=n||L.geoJson();return p(e,function(e,n){function r(){t=!0}var t;return e?i.fire("error",{error:e}):(i.on("error",r),a(n.responseText,o,i),i.off("error",r),void(t||i.fire("ready")))}),i},n.exports.csv.parse=a,n.exports.gpx=function(e,n,r){var o=r||L.geoJson();return p(e,function(e,n){function r(){t=!0}var t;return e?o.fire("error",{error:e}):(o.on("error",r),i(n.responseXML||n.responseText,0,o),o.off("error",r),void(t||o.fire("ready")))}),o},n.exports.gpx.parse=i,n.exports.kml=function(e,n,r){var o=r||L.geoJson();return p(e,function(e,n){function r(){t=!0}var t;return e?o.fire("error",{error:e}):(o.on("error",r),s(n.responseXML||n.responseText,0,o),o.off("error",r),void(t||o.fire("ready")))}),o},n.exports.kml.parse=s,n.exports.wkt=function(e,n,r){var t=r||L.geoJson();return p(e,function(e,n){return e?t.fire("error",{error:e}):(c(n.responseText,0,t),void t.fire("ready"))}),t},n.exports.wkt.parse=c},{corslite:5,csv2geojson:6,polyline:9,togeojson:10,"topojson/topojson.js":11,wellknown:12}],2:[function(){},{}],3:[function(e,n){n.exports=e(2)},{"/Users/tmcw/src/leaflet-omnivore/node_modules/browserify/lib/_empty.js":2}],4:[function(e,n){function r(){}var t=n.exports={};t.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,n="undefined"!=typeof window&&window.MutationObserver,r="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var t=[];if(n){var o=document.createElement("div");return new MutationObserver(function(){var e=t.slice();t.length=0,e.forEach(function(e){e()})}).observe(o,{attributes:!0}),function(e){t.length||o.setAttribute("yes","no"),t.push(e)}}return r?(window.addEventListener("message",function(e){var n=e.source;(n===window||null===n)&&"process-tick"===e.data&&(e.stopPropagation(),0<t.length)&&t.shift()()},!0),function(e){t.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),t.title="browser",t.browser=!0,t.env={},t.argv=[],t.on=r,t.addListener=r,t.once=r,t.off=r,t.removeListener=r,t.removeAllListeners=r,t.emit=r,t.binding=function(){throw new Error("process.binding is not supported")},t.cwd=function(){return"/"},t.chdir=function(){throw new Error("process.chdir is not supported")}},{}],5:[function(e,n){void 0!==n&&(n.exports=function(e,n,r){function t(){void 0===u.status||function(e){return 200<=e&&e<300||304===e}(u.status)?n.call(u,null,u):n.call(u,u,null)}var o=!1;if(void 0===window.XMLHttpRequest)return n(Error("Browser not supported"));if(void 0===r){var i=e.match(/^\s*https?:\/\/[^\/]*/);r=i&&i[0]!==location.protocol+"//"+location.domain+(location.port?":"+location.port:"")}var u=new window.XMLHttpRequest;if(r&&!("withCredentials"in u)){u=new window.XDomainRequest;var a=n;n=function(){if(o)a.apply(this,arguments);else{var e=this,n=arguments;setTimeout(function(){a.apply(e,n)},0)}}}return"onload"in u?u.onload=t:u.onreadystatechange=function(){4===u.readyState&&t()},u.onerror=function(e){n.call(this,e||!0,null),n=function(){}},u.onprogress=function(){},u.ontimeout=function(e){n.call(this,e,null),n=function(){}},u.onabort=function(e){n.call(this,e,null),n=function(){}},u.open("GET",e,!0),u.send(null),o=!0,u})},{}],6:[function(e,n){function y(e){return!!e.match(/(Lat)(itude)?/gi)}function w(e){return!!e.match(/(L)(on|ng)(gitude)?/i)}function u(e){return"object"==typeof e?Object.keys(e).length:0}function x(o){var i=[];return[",",";","\t","|"].forEach(function(e){var n=L(e).parse(o);if(1<=n.length){for(var r=u(n[0]),t=0;t<n.length;t++)if(u(n[t])!==r)return;i.push({delimiter:e,arity:Object.keys(n[0]).length})}}),i.length?i.sort(function(e,n){return n.arity-e.arity})[0].delimiter:null}var L=e("dsv"),E=e("sexagesimal");n.exports={isLon:w,isLat:y,csv:L.csv.parse,tsv:L.tsv.parse,dsv:L,auto:function(e){var n=x(e);return n?L(n).parse(e):null},csv2geojson:function(e,n,r){r||(r=n,n={}),n.delimiter=n.delimiter||",";var t=n.latfield||"",o=n.lonfield||"",i=[],u={type:"FeatureCollection",features:i};if("auto"===n.delimiter&&"string"==typeof e&&(n.delimiter=x(e),!n.delimiter))return r({type:"Error",message:"Could not autodetect delimiter"});var a="string"==typeof e?L(n.delimiter).parse(e):e;if(!a.length)return r(null,u);if(!t||!o){for(var s in a[0])!t&&y(s)&&(t=s),!o&&w(s)&&(o=s);if(!t||!o){var f=[];for(var c in a[0])f.push(c);return r({type:"Error",message:"Latitude and longitude fields not present",data:a,fields:f})}}for(var l=[],p=0;p<a.length;p++)if(void 0!==a[p][o]&&void 0!==a[p][o]){var d,g,h,v=a[p][o],m=a[p][t];(h=E(v,"EW"))&&(v=h),(h=E(m,"NS"))&&(m=h),d=parseFloat(v),g=parseFloat(m),isNaN(d)||isNaN(g)?l.push({message:"A row contained an invalid value for latitude or longitude",row:a[p]}):(n.includeLatLon||(delete a[p][o],delete a[p][t]),i.push({type:"Feature",properties:a[p],geometry:{type:"Point",coordinates:[parseFloat(d),parseFloat(g)]}}))}r(l.length?l:null,u)},toLine:function(e){for(var n=e.features,r={type:"Feature",geometry:{type:"LineString",coordinates:[]}},t=0;t<n.length;t++)r.geometry.coordinates.push(n[t].geometry.coordinates);return r.properties=n[0].properties,{type:"FeatureCollection",features:[r]}},toPolygon:function(e){for(var n=e.features,r={type:"Feature",geometry:{type:"Polygon",coordinates:[[]]}},t=0;t<n.length;t++)r.geometry.coordinates[0].push(n[t].geometry.coordinates);return r.properties=n[0].properties,{type:"FeatureCollection",features:[r]}}}},{dsv:7,sexagesimal:8}],7:[function(e,n){e("fs"),n.exports=new Function('dsv.version = "0.0.3";\n\ndsv.tsv = dsv("\\t");\ndsv.csv = dsv(",");\n\nfunction dsv(delimiter) {\n  var dsv = {},\n      reFormat = new RegExp("[\\"" + delimiter + "\\n]"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  dsv.parse = function(text, f) {\n    var o;\n    return dsv.parseRows(text, function(row, i) {\n      if (o) return o(row, i - 1);\n      var a = new Function("d", "return {" + row.map(function(name, i) {\n        return JSON.stringify(name) + ": d[" + i + "]";\n      }).join(",") + "}");\n      o = f ? function(row, i) { return f(a(row), i); } : a;\n    });\n  };\n\n  dsv.parseRows = function(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        var c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.substring(j + 1, i).replace(/""/g, "\\"");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var c = text.charCodeAt(I++), k = 1;\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.substring(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.substring(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && !(a = f(a, n++))) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  };\n\n  dsv.format = function(rows) {\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\n    var fieldSet = {}, fields = [];\n\n    // Compute unique fields in order of discovery.\n    rows.forEach(function(row) {\n      for (var field in row) {\n        if (!(field in fieldSet)) {\n          fields.push(fieldSet[field] = field);\n        }\n      }\n    });\n\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return fields.map(function(field) {\n        return formatValue(row[field]);\n      }).join(delimiter);\n    })).join("\\n");\n  };\n\n  dsv.formatRows = function(rows) {\n    return rows.map(formatRow).join("\\n");\n  };\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return reFormat.test(text) ? "\\"" + text.replace(/\\"/g, "\\"\\"") + "\\"" : text;\n  }\n\n  return dsv;\n}\n;return dsv')()},{fs:2}],8:[function(e,n){n.exports=function(e,n){if(n||(n="NSEW"),"string"!=typeof e)return null;var r=e.match(/^([0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|"|”|″) *)?([NSEW])?/);return r?r[4]&&-1===n.indexOf(r[4])?null:((r[1]?parseFloat(r[1]):0)+(r[2]?parseFloat(r[2])/60:0)+(r[3]?parseFloat(r[3])/3600:0))*(r[4]&&"S"===r[4]||"W"===r[4]?-1:1):null}},{}],9:[function(e,n){function a(e,n){e=Math.round(e*n),(e<<=1)<0&&(e=~e);for(var r="";32<=e;)r+=String.fromCharCode(63+(32|31&e)),e>>=5;return r+String.fromCharCode(e+63)}var r={decode:function(e,n){for(var r,t=0,o=0,i=0,u=[],a=0,s=0,f=null,c=Math.pow(10,n||5);t<e.length;){for(f=null,s=a=0;s|=(31&(f=e.charCodeAt(t++)-63))<<a,a+=5,32<=f;);for(r=1&s?~(s>>1):s>>1,a=s=0;s|=(31&(f=e.charCodeAt(t++)-63))<<a,a+=5,32<=f;);o+=r,i+=1&s?~(s>>1):s>>1,u.push([o/c,i/c])}return u},encode:function(e,n){if(!e.length)return"";for(var r=Math.pow(10,n||5),t=a(e[0][0],r)+a(e[0][1],r),o=1;o<e.length;o++){var i=e[o],u=e[o-1];t+=a(i[0]-u[0],r),t+=a(i[1]-u[1],r)}return t}};void 0!==typeof n&&(n.exports=r)},{}],10:[function(r,n,t){(function(e){toGeoJSON=function(){"use strict";function s(e){if(!e||!e.length)return 0;for(var n=0,r=0;n<e.length;n++)r=(r<<5)-r+e.charCodeAt(n)|0;return r}function N(e,n){return e.getElementsByTagName(n)}function C(e,n){return e.getAttribute(n)}function o(e,n){return parseFloat(C(e,n))}function P(e,n){var r=N(e,n);return r.length?r[0]:null}function f(e){for(var n=0,r=[];n<e.length;n++)r[n]=parseFloat(e[n]);return r}function T(e){return e&&function(e){e.normalize&&e.normalize()}(e),e&&e.firstChild&&e.firstChild.nodeValue||""}function O(e){return f(e.replace(n,"").split(","))}function I(e){for(var n=e.replace(i,"").split(u),r=[],t=0;t<n.length;t++)r.push(O(n[t]));return r}function d(e){var n=[o(e,"lon"),o(e,"lat")],r=P(e,"ele"),t=P(e,"time");return r&&n.push(parseFloat(T(r))),{coordinates:n,time:t?T(t):null}}var c,n=/\s*/g,i=/^\s*|\s*$/g,u=/\s+/;return"undefined"!=typeof XMLSerializer?c=new XMLSerializer:"object"!=typeof t||"object"!=typeof e||e.browser||(c=new(r("xmldom").XMLSerializer)),{kml:function(e){function k(e){var n,r;return"#"===(e=e||"").substr(0,1)&&(e=e.substr(1)),(6===e.length||3===e.length)&&(n=e),8===e.length&&(r=parseInt(e.substr(0,2),16)/255,n=e.substr(2)),[n,isNaN(r)?void 0:r]}function M(e){var n=N(e,"coord"),r=[],t=[];0===n.length&&(n=N(e,"gx:coord"));for(var o=0;o<n.length;o++)r.push(f(T(n[o]).split(" ")));var i=N(e,"when");for(o=0;o<i.length;o++)t.push(T(i[o]));return{coords:r,times:t}}function n(e){var n,r=function e(n){var r,t,o,i,u,a=[],s=[];if(P(n,"MultiGeometry"))return e(P(n,"MultiGeometry"));if(P(n,"MultiTrack"))return e(P(n,"MultiTrack"));if(P(n,"gx:MultiTrack"))return e(P(n,"gx:MultiTrack"));for(o=0;o<F.length;o++)if(t=N(n,F[o]))for(i=0;i<t.length;i++)if(r=t[i],"Point"==F[o])a.push({type:"Point",coordinates:O(T(P(r,"coordinates")))});else if("LineString"==F[o])a.push({type:"LineString",coordinates:I(T(P(r,"coordinates")))});else if("Polygon"==F[o]){var f=N(r,"LinearRing"),c=[];for(u=0;u<f.length;u++)c.push(I(T(P(f[u],"coordinates"))));a.push({type:"Polygon",coordinates:c})}else if("Track"==F[o]||"gx:Track"==F[o]){var l=M(r);a.push({type:"LineString",coordinates:l.coords}),l.times.length&&s.push(l.times)}return{geoms:a,coordTimes:s}}(e),t={},o=T(P(e,"name")),i=T(P(e,"styleUrl")),u=T(P(e,"description")),a=P(e,"TimeSpan"),s=P(e,"ExtendedData"),f=P(e,"LineStyle"),c=P(e,"PolyStyle");if(!r.geoms.length)return[];if(o&&(t.name=o),i&&j[i]&&(t.styleUrl=i,t.styleHash=j[i]),u&&(t.description=u),a){var l=T(P(a,"begin")),p=T(P(a,"end"));t.timespan={begin:l,end:p}}if(f){var d=k(T(P(f,"color"))),g=d[0],h=d[1],v=parseFloat(T(P(f,"width")));g&&(t.stroke=g),isNaN(h)||(t["stroke-opacity"]=h),isNaN(v)||(t["stroke-width"]=v)}if(c){var m=k(T(P(c,"color"))),y=m[0],w=m[1],x=T(P(c,"fill")),L=T(P(c,"outline"));y&&(t.fill=y),isNaN(w)||(t["fill-opacity"]=w),x&&(t["fill-opacity"]="1"===x?1:0),L&&(t["stroke-opacity"]="1"===L?1:0)}if(s){var E=N(s,"Data"),S=N(s,"SimpleData");for(n=0;n<E.length;n++)t[E[n].getAttribute("name")]=T(P(E[n],"value"));for(n=0;n<S.length;n++)t[S[n].getAttribute("name")]=T(S[n])}r.coordTimes.length&&(t.coordTimes=1===r.coordTimes.length?r.coordTimes[0]:r.coordTimes);var b={type:"Feature",geometry:1===r.geoms.length?r.geoms[0]:{type:"GeometryCollection",geometries:r.geoms},properties:t};return C(e,"id")&&(b.id=C(e,"id")),[b]}for(var r={type:"FeatureCollection",features:[]},j={},F=["Polygon","LineString","Point","Track","gx:Track"],t=N(e,"Placemark"),o=N(e,"Style"),i=0;i<o.length;i++)j["#"+C(o[i],"id")]=s(void 0!==(u=o[i]).xml?u.xml:c.serializeToString(u)).toString(16);for(var u,a=0;a<t.length;a++)r.features=r.features.concat(n(t[a]));return r},gpx:function(e){function a(e,n){var r=N(e,n),t=[],o=[],i=r.length;if(!(i<2)){for(var u=0;u<i;u++){var a=d(r[u]);t.push(a.coordinates),a.time&&o.push(a.time)}return{line:t,times:o}}}function n(e){for(var n,r=N(e,"trkseg"),t=[],o=[],i=0;i<r.length;i++)(n=a(r[i],"trkpt")).line&&t.push(n.line),n.times.length&&o.push(n.times);if(0!==t.length){var u=s(e);return o.length&&(u.coordTimes=1===t.length?o[0]:o),{type:"Feature",properties:u,geometry:{type:1===t.length?"LineString":"MultiLineString",coordinates:1===t.length?t[0]:t}}}}function r(e){var n=a(e,"rtept");if(n){var r={type:"Feature",properties:s(e),geometry:{type:"LineString",coordinates:n}};return n.times.length&&(r.geometry.times=n.times),r}}function s(e){var n,r=["name","desc","author","copyright","link","time","keywords"],t={};for(n=0;n<r.length;n++)t[r[n]]=T(P(e,r[n]));return function(e){var n={};for(var r in e)e[r]&&(n[r]=e[r]);return n}(t)}var t,o,i,u,f=N(e,"trk"),c=N(e,"rte"),l=N(e,"wpt"),p={type:"FeatureCollection",features:[]};for(t=0;t<f.length;t++)(o=n(f[t]))&&p.features.push(o);for(t=0;t<c.length;t++)(o=r(c[t]))&&p.features.push(o);for(t=0;t<l.length;t++)p.features.push((i=l[t],u=void 0,(u=s(i)).sym=T(P(i,"sym")),{type:"Feature",properties:u,geometry:{type:"Point",coordinates:d(i).coordinates}}));return p}}}(),void 0!==n&&(n.exports=toGeoJSON)}).call(this,r("_process"))},{_process:4,xmldom:3}],11:[function(e,u){!function(){function p(s,o){function e(e,n){for(var r in e){var t=e[r];delete n[t.start],delete t.start,delete t.end,t.forEach(function(e){i[e<0?~e:e]=1}),u.push(t)}}var i={},f={},c={},u=[],a=-1;return o.forEach(function(e,n){var r,t=s.arcs[e<0?~e:e];t.length<3&&!t[1][0]&&!t[1][1]&&(r=o[++a],o[a]=e,o[n]=r)}),o.forEach(function(e){var n,r,t=function(e){var n,r=s.arcs[e<0?~e:e],t=r[0];return s.transform?(n=[0,0],r.forEach(function(e){n[0]+=e[0],n[1]+=e[1]})):n=r[r.length-1],e<0?[n,t]:[t,n]}(e),o=t[0],i=t[1];if(n=c[o])if(delete c[n.end],n.push(e),n.end=i,r=f[i]){delete f[r.start];var u=r===n?n:n.concat(r);f[u.start=n.start]=c[u.end=r.end]=u}else f[n.start]=c[n.end]=n;else if(n=f[i])if(delete f[n.start],n.unshift(e),n.start=o,r=c[o]){delete c[r.end];var a=r===n?n:r.concat(n);f[a.start=r.start]=c[a.end=n.end]=a}else f[n.start]=c[n.end]=n;else f[(n=[e]).start=o]=c[n.end=i]=n}),e(c,f),e(f,c),o.forEach(function(e){i[e<0?~e:e]||u.push([e])}),u}function r(e,n,r){function t(e){var n=e<0?~e:e;(s[n]||(s[n]=[])).push({i:e,g:a})}function o(e){e.forEach(t)}function i(e){e.forEach(o)}var u=[];if(1<arguments.length){var a,s=[],f={LineString:o,MultiLineString:i,Polygon:i,MultiPolygon:function(e){e.forEach(i)}};(function e(n){"GeometryCollection"===n.type?n.geometries.forEach(e):n.type in f&&f[(a=n).type](n.arcs)})(n),s.forEach(arguments.length<3?function(e){u.push(e[0].i)}:function(e){r(e[0].g,e[e.length-1].g)&&u.push(e[0].i)})}else for(var c=0,l=e.arcs.length;c<l;++c)u.push(c);return{type:"MultiLineString",arcs:p(e,u)}}function t(u,e){function r(n){n.forEach(function(e){e.forEach(function(e){(s[e=e<0?~e:e]||(s[e]=[])).push(n)})}),t.push(n)}function a(e){return 0<function(e){for(var n,r=-1,t=e.length,o=e[t-1],i=0;++r<t;)n=o,o=e[r],i+=n[0]*o[1]-n[1]*o[0];return.5*i}(i(u,{type:"Polygon",arcs:[e]}).coordinates[0])}var s={},t=[],o=[];return e.forEach(function(e){"Polygon"===e.type?r(e.arcs):"MultiPolygon"===e.type&&e.arcs.forEach(r)}),t.forEach(function(e){if(!e._){var n=[],r=[e];for(e._=1,o.push(n);e=r.pop();)n.push(e),e.forEach(function(e){e.forEach(function(e){s[e<0?~e:e].forEach(function(e){e._||(e._=1,r.push(e))})})})}}),t.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:o.map(function(e){var r=[];if(e.forEach(function(e){e.forEach(function(e){e.forEach(function(e){s[e<0?~e:e].length<2&&r.push(e)})})}),r=p(u,r),1<(n=r.length))for(var t,o=a(e[0][0]),i=0;i<n;++i)if(o===a(r[i])){t=r[0],r[0]=r[i],r[i]=t;break}return r})}}function o(e,n){var r={type:"Feature",id:n.id,properties:n.properties||{},geometry:i(e,n)};return null==n.id&&delete r.id,r}function i(e,n){function o(e,n){n.length&&n.pop();for(var r,t=s[e<0?~e:e],o=0,i=t.length;o<i;++o)n.push(r=t[o].slice()),a(r,o);e<0&&function(e,n){for(var r,t=e.length,o=t-n;o<--t;)r=e[o],e[o++]=e[t],e[t]=r}(n,i)}function r(e){return e=e.slice(),a(e,0),e}function t(e){for(var n=[],r=0,t=e.length;r<t;++r)o(e[r],n);return n.length<2&&n.push(n[0].slice()),n}function i(e){for(var n=t(e);n.length<4;)n.push(n[0].slice());return n}function u(e){return e.map(i)}var a=d(e.transform),s=e.arcs,f={Point:function(e){return r(e.coordinates)},MultiPoint:function(e){return e.coordinates.map(r)},LineString:function(e){return t(e.arcs)},MultiLineString:function(e){return e.arcs.map(t)},Polygon:function(e){return u(e.arcs)},MultiPolygon:function(e){return e.arcs.map(u)}};return function e(n){var r=n.type;return"GeometryCollection"===r?{type:r,geometries:n.geometries.map(e)}:r in f?{type:r,coordinates:f[r](n)}:null}(n)}function g(e,n){for(var r=0,t=e.length;r<t;){var o=r+t>>>1;e[o]<n?r=1+o:t=o}return r}function c(e){var n=e[0],r=e[1],t=e[2];return Math.abs((n[0]-t[0])*(r[1]-n[1])-(n[0]-r[0])*(t[1]-n[1]))}function l(e,n){return e[1][2]-n[1][2]}function d(e){if(!e)return h;var r,t,o=e.scale[0],i=e.scale[1],u=e.translate[0],a=e.translate[1];return function(e,n){n||(r=t=0),e[0]=(r+=e[0])*o+u,e[1]=(t+=e[1])*i+a}}function h(){}var e={version:"1.6.8",mesh:function(e){return i(e,r.apply(this,arguments))},meshArcs:r,merge:function(e){return i(e,t.apply(this,arguments))},mergeArcs:t,feature:function(n,e){return"GeometryCollection"===e.type?{type:"FeatureCollection",features:e.geometries.map(function(e){return o(n,e)})}:o(n,e)},neighbors:function(e){function r(e,r){e.forEach(function(e){e<0&&(e=~e);var n=o[e];n?n.push(r):o[e]=[r]})}function t(e,n){e.forEach(function(e){r(e,n)})}var o={},n=e.map(function(){return[]}),i={LineString:r,MultiLineString:t,Polygon:t,MultiPolygon:function(e,n){e.forEach(function(e){t(e,n)})}};for(var u in e.forEach(function n(e,r){"GeometryCollection"===e.type?e.geometries.forEach(function(e){n(e,r)}):e.type in i&&i[e.type](e.arcs,r)}),o)for(var a=o[u],s=a.length,f=0;f<s;++f)for(var c=f+1;c<s;++c){var l,p=a[f],d=a[c];(l=n[p])[u=g(l,d)]!==d&&l.splice(u,0,d),(l=n[d])[u=g(l,p)]!==p&&l.splice(u,0,p)}return n},presimplify:function(e,o){function n(e){a.remove(e),e[1][2]=o(e),a.push(e)}var i,u=d(e.transform),r=function(e){if(!e)return h;var o,i,u=e.scale[0],a=e.scale[1],s=e.translate[0],f=e.translate[1];return function(e,n){n||(o=i=0);var r=(e[0]-s)/u|0,t=(e[1]-f)/a|0;e[0]=r-o,e[1]=t-i,o=r,i=t}}(e.transform),a=function(){function t(e,n){for(;0<n;){var r=(n+1>>1)-1,t=u[r];if(0<=l(e,t))break;u[t._=n]=t,u[e._=n=r]=e}}function o(e,n){for(;;){var r=n+1<<1,t=r-1,o=n,i=u[o];if(t<a&&l(u[t],i)<0&&(i=u[o=t]),r<a&&l(u[r],i)<0&&(i=u[o=r]),o===n)break;u[i._=n]=i,u[e._=n=o]=e}}var e={},u=[],a=0;return e.push=function(e){return t(u[e._=a]=e,a++),a},e.pop=function(){if(!(a<=0)){var e,n=u[0];return 0<--a&&(e=u[a],o(u[e._=0]=e,0)),n}},e.remove=function(e){var n,r=e._;if(u[r]===e)return r!==--a&&(l(n=u[a],e)<0?t:o)(u[n._=r]=n,r),r},e}(),t=0;for(o||(o=c),e.arcs.forEach(function(e){var n=[];e.forEach(u);for(var r=1,t=e.length-1;r<t;++r)(i=e.slice(r-1,r+2))[1][2]=o(i),n.push(i),a.push(i);for(e[0][2]=e[t][2]=1/0,r=0,t=n.length;r<t;++r)(i=n[r]).previous=n[r-1],i.next=n[r+1]});i=a.pop();){var s=i.previous,f=i.next;i[1][2]<t?i[1][2]=t:t=i[1][2],s&&(s.next=f,s[2]=i[2],n(s)),f&&(f.previous=s,f[0]=i[0],n(f))}return e.arcs.forEach(function(e){e.forEach(r)}),e}};"object"==typeof u&&u.exports?u.exports=e:this.topojson=e}()},{}],12:[function(e,n){function r(r){function i(e){var n=r.substring(f).match(e);return n?(f+=n[0].length,n[0]):null}function u(){i(/^\s*/)}function n(){u();for(var e,n=0,r=[],t=[r],o=r;e=i(/^(\()/)||i(/^(\))/)||i(/^(\,)/)||i(c);){if("("==e)t.push(o),o=[],t[t.length-1].push(o),n++;else if(")"==e){if(!(o=t.pop()))return;if(0===--n)break}else if(","===e)o=[],t[t.length-1].push(o);else{if(isNaN(parseFloat(e)))return null;o.push(parseFloat(e))}u()}return 0!==n?null:r}function t(){for(var e,n,r=[];n=i(c)||i(/^(\,)/);)","==n?(r.push(e),e=[]):(e||(e=[]),e.push(parseFloat(n))),u();return e&&r.push(e),r.length?r:null}function o(){return function(){if(!i(/^(point)/i))return null;if(u(),!i(/^(\()/))return null;var e=t();return e?(u(),i(/^(\))/)?{type:"Point",coordinates:e[0]}:null):null}()||function(){if(!i(/^(linestring)/i))return null;if(u(),!i(/^(\()/))return null;var e=t();return e&&i(/^(\))/)?{type:"LineString",coordinates:e}:null}()||(i(/^(polygon)/i)?(u(),{type:"Polygon",coordinates:n()}):null)||function(){if(!i(/^(multipoint)/i))return null;u();var e=n();return e?(u(),{type:"MultiPoint",coordinates:e}):null}()||function(){if(!i(/^(multilinestring)/i))return null;u();var e=n();return e?(u(),{type:"MultiLineString",coordinates:e}):null}()||(i(/^(multipolygon)/i)?(u(),{type:"MultiPolygon",coordinates:n()}):null)||function(){var e,n=[];if(!i(/^(geometrycollection)/i))return null;if(u(),!i(/^(\()/))return null;for(;e=o();)n.push(e),u(),i(/^(\,)/),u();return i(/^(\))/)?{type:"GeometryCollection",geometries:n}:null}()}var e,a=r.split(";"),s=(r=a.pop(),(a.shift()||"").split("=").pop()),f=0;return(e=o())&&s.match(/\d+/)&&(e.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+s}}),e}n.exports=r,n.exports.parse=r,n.exports.stringify=function e(n){function r(e){return 2===e.length?e[0]+" "+e[1]:3===e.length?e[0]+" "+e[1]+" "+e[2]:void 0}function t(e){return e.map(r).join(", ")}function o(e){return e.map(t).map(i).join(", ")}function i(e){return"("+e+")"}switch("Feature"===n.type&&(n=n.geometry),n.type){case"Point":return"POINT ("+r(n.coordinates)+")";case"LineString":return"LINESTRING ("+t(n.coordinates)+")";case"Polygon":return"POLYGON ("+o(n.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+t(n.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+n.coordinates.map(o).map(i).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+o(n.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+n.geometries.map(e).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var c=/^[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/},{}]},{},[1])(1)});